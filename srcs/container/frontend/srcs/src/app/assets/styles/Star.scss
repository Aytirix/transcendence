@use "sass:math";
@use "sass:string";

@function multiple-box-shadow($n, $type: "normal") {
  $colors: ();

  @if $type == "normal" {
    $colors: #FFFFFF, #F8F7FF, #FFFBEB, #F3F9FF, #FFF8E7, #EEEEFF;
  } @else if $type == "special" {
    $colors: #FFECEC, #EEDDFF, #FFE9D6, #E6ECFF, #FFE4E1;
  } @else if $type == "bright" {
    $colors: #FFFFFF, #FFFAFA, #F8F8FF;
  }

  $value: "";

  @for $i from 1 through $n {
    $c: nth($colors, random(length($colors)));
    $vw: random(200);
    $vh: random(200);
    $opacity: 0.7 + random() * 0.3;
    $size: if($type == "bright", random() * 0.8, 0);

    $shadow: "#{$vw}vw #{$vh}vh 0 #{$size}px rgba(#{red($c)}, #{green($c)}, #{blue($c)}, #{$opacity})";

    @if $i == 1 {
      $value: $shadow;
    } @else {
      $value: "#{$value}, #{$shadow}";
    }
  }

  @return string.unquote($value);
}

#PacmanStars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  
  .star-background {
    background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    perspective: 1000px;
	z-index: 1;
	top: 0;
	left: 0;

    $shadows-small: multiple-box-shadow(800, "normal");
    $shadows-medium: multiple-box-shadow(500, "special");
    $shadows-bright: multiple-box-shadow(100, "bright");

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      background: transparent;
      z-index: 3;
    }

    &::before {
      width: 1px;
      height: 1px;
      box-shadow: $shadows-small;
      animation: animStar 50s linear infinite;
    }

    &::after {
      width: 2px;
      height: 2px;
      box-shadow: $shadows-medium;
      animation: animStar 100s linear infinite;
    }

    #stars-bright {
      position: absolute;
      top: 0;
      left: 0;
      width: 2px;
      height: 2px;
      background: transparent;
      border-radius: 50%;
      box-shadow: $shadows-bright;
      animation: animStar 150s linear infinite, twinkle 8s ease-in-out infinite;
      z-index: 3;
    }

    #shooting-stars {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      overflow: visible;
      z-index: 4;

      span {
        position: absolute;
        width: 3px;
        height: 3px;
        background: white;
        border-radius: 50%;
        animation: shoot var(--d) ease-in-out var(--delay) infinite;
        transform-origin: center center;
        filter: blur(0.3px);
        z-index: 4;
      }

      @for $i from 1 through 5 {
        span:nth-child(#{$i}) {
          $fromX: -20 + random() * 20 - 10;
          $fromY: -20 + random() * 20 - 10;
          $toX: 20 + random() * 80;
          $toY: 20 + random() * 80;
          $duration: 10 + random() * 15;
          $delay: random() * 1;

          --sx: #{$fromX}vw;
          --sy: #{$fromY}vh;
          --ex: #{$toX}vw;
          --ey: #{$toY}vh;
          --d: #{$duration}s;
          --delay: #{$delay}s;
        }
      }
    }
  }

  #title {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    color: #fff;
    text-align: center;
    font-family: "Lato", sans-serif;
    font-weight: 300;
    font-size: 50px;
    letter-spacing: 10px;
    transform: translateY(-50%);
    padding-left: 10px;

    span {
      background: linear-gradient(white, #38495a);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  }

  /* .pacman-content-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 10;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    box-sizing: border-box;
  } */
}

@keyframes animStar {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-2000px);
  }
}

@keyframes twinkle {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

@keyframes shoot {
  0% {
    transform: translate(var(--sx), var(--sy)) scale(0.3);
    opacity: 0;
  }
  5% { opacity: 0.3; }
  10% {
    opacity: 0.8;
    box-shadow: 0 0 4px 2px rgba(255, 255, 255, 0.6);
  }
  15% {
    opacity: 1;
    box-shadow: 0 0 6px 3px rgba(255, 255, 255, 0.8);
  }
  20% {
    transform: translate(var(--ex), var(--ey)) scale(1);
    opacity: 0;
    box-shadow: 0 0 2px 0 rgba(255, 255, 255, 0);
  }
  100% { opacity: 0; }
}
