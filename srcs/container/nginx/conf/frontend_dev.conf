server {
    listen 3000 ssl;
    server_name localhost *.42nice.fr;

    ssl_certificate /etc/nginx/ssl/certificates/server.crt;
    ssl_certificate_key /etc/nginx/ssl/certificates/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # Redirection pour les domaines sans .42nice.fr vers .42nice.fr
    if ($host !~* \.42nice\.fr$) {
        set $redirect_domain 1;
    }
    if ($host = localhost) {
        set $redirect_domain 0;
    }
    if ($request_uri = /ca) {
        set $redirect_domain 0;
    }
    if ($redirect_domain = 1) {
        return 301 https://$host.42nice.fr:3000$request_uri;
    }

    # Proxy des WebSockets vers le backend (spécifique)
    location ~ ^/api/(chat|pong|Pacman)$ {
        proxy_pass http://backend:7000/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Ssl on;
    }

    # Redirection des ressources statiques Swagger depuis /docs/static/ vers /api/docs/static/
    location /docs/static/ {
        rewrite ^/docs/static/(.*)$ /api/docs/static/$1 permanent;
    }

    # Limite spécifique pour l'upload Minecraft (10 Mo)
    location = /api/setMinecraftUser {
        client_max_body_size 10M;
        proxy_pass http://backend:7000/setMinecraftUser;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Ssl on;
    }

    # Proxy des requêtes API vers le backend (général)
    location /api/ {
        proxy_pass http://backend:7000/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Ssl on;
    }

    # Autoriser le téléchargement du certificat CA
    location = /ca {
        alias /etc/nginx/ssl/certificates/CA/ironCA.crt;
        add_header Content-Type application/x-x509-ca-cert;
        add_header Content-Disposition 'attachment; filename="ironCA.crt"';
    }

    # Serve le frontend React
    location / {
		proxy_pass http://frontend:3000;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}

    error_log /var/log/nginx/cv_error.log;
    access_log /var/log/nginx/cv_access.log;
}